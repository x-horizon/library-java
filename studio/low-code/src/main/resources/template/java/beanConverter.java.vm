package ${packageName}.bean.convert;

import ${packageName}.bean.dto.${ClassName}SaveDTO;
import ${packageName}.bean.dto.${ClassName}UpdateDTO;
import ${packageName}.bean.po.${ClassName}PO;
import ${packageName}.bean.vo.${ClassName}VO;
import org.horizon.sdk.library.java.tool.convert.mapstruct.plus.MapstructMappingManager;
import org.horizon.sdk.library.java.doc.knife4j.model.PageResult;
import com.baomidou.mybatisplus.core.metadata.IPage;
import org.mapstruct.*;
import org.mapstruct.factory.Mappers;

import java.util.List;

/**
 * ${tableComment}(${tableName}) 模型转换
 *
 * @author TODO 请填写名字
 * @since ${currentTimeAccurateToSecond}
 */
@Mapper(uses = MapstructMappingManager.class)
public interface ${ClassName}Converter {

        ${ClassName}Converter INSTANCE = Mappers.getMapper(${ClassName}Converter.class);

        ${ClassName}PO toPO(${ClassName}SaveDTO entity);

        ${ClassName}PO toPO(${ClassName}UpdateDTO entity);

    @Mappings({
            @Mapping(source = "TODO请修改为主键字段名", target = "TODO请修改为主键字段名", qualifiedBy = MapstructLongToString.class),
            @Mapping(source = "createTime", target = "createTime", qualifiedBy = MapstructLocalDateTimeToLong.class),
            @Mapping(source = "updateTime", target = "updateTime", qualifiedBy = MapstructLocalDateTimeToLong.class),
    })
        ${ClassName}VO to${ClassName}VO(${ClassName}PO entity);

    @Named("to${ClassName}VOs")
    @IterableMapping(elementTargetType = ${ClassName}VO.class)
    List<${ClassName}VO> to${ClassName}VOs(List<${ClassName}PO> entities);

    @Mappings({
            @Mapping(source = "pages", target = "totalPages"),
            @Mapping(source = "current", target = "currentPage"),
            @Mapping(source = "size", target = "pageSize"),
            @Mapping(source = "records", target = "data", qualifiedByName = "to${ClassName}VOs"),
    })
    PageResult<${ClassName}VO> to${ClassName}PageResultVO(IPage<${ClassName}PO> page);

}